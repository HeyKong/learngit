学习使用git
***文本文件不能由记事本直接创建，应使用notepad++创建
先打开Git Bash, cd到工作区目录下，mkdir创建目录，pwd查看当前所在目录
初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步（先添加后提交）：
	使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	$ git add file1.txt
	$ git add file2.txt file3.txt

	使用命令git commit -m <message>，完成。
	$ git commit -m "wrote a readme file"

版本控制：
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
$ git reset --hard HEAD^ //返回上一个版本
$ git reset --hard 81e483da //返回到具体的版本号
***上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
$ git log --pretty=oneline //pretty=oneline参数可以只显示一行日志
***要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

$ git status //查看工作区状态
注意：cat firstText.txt 时，查看的是本地的文件，要看提交后的版本可以更新到最新版本或者还原版本。
撤销该文件在工作区所有的修改：git checkout -- fileName.xxx
撤销该文件在暂存区所有的修改，回到最新版本：git reset HEAD <file> //git reset HEAD fileName.xxx

删除文件（删除未提交文件）！无法恢复文件，回收站找不回，不建议这样删除工作区的文件：
rm fileName.xxx //删除工作区文件，此时尚未commit提交到master版本控制区
删除文件（删除提交过的文件）：
touch testing.txt //创建一个测试文本
git add testing.txt //添加到暂存区 
git commit -m "add a new file" //提交到master
//开始删除
rm fileName.xxx //如果确实想删除该文件并保留版本后期好恢复的话执行git rm 后git commit提交
//此时可以撤回删除
git checkout fileName.xxx //用来恢复rm 掉的文件。
-----------------------
git rm testing.txt //从master删除文件
git commit -m "delete testing file" //删除后要提交才真正在master删除并留下了版本id
//此时只能回退到版本号了
git reset --hard 版本号 //git rm 并且提交了之后，就需要使用git reset --hard 版本号来回退了

添加远程库：
origin是远程库的名字，我这里设置的是khkey
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
